{"version":3,"sources":["utils/bufferToChord.js","utils/sectionToTab.js","ducks/data.js","utils/strings.js","components/FretBoard.js","utils/useEventListener.js","components/KeyListener.js","components/Tablature.js","components/AppInfo.js","components/Page.js","ducks/rootReducer.js","ducks/store.js","App.js","reportWebVitals.js","index.js"],"names":["bufferToChord","buffer","length","reduce","accum","current","Math","max","countMaxFretLength","emptySpace","substring","map","b","sectionToTab","section","tab","forEach","chord","note","i","getDefaultState","sections","Array","fill","keyHold","isMultipleOn","currentSection","SET_BUFFER","SET_KEY_HOLD","SET_IS_MULTIPLE_ON","UNDO","ADD_LINE","COMPLETE_SECTION","setBuffer","payload","type","setIsMultipleOn","addLine","undo","selectSections","state","data","selectBuffer","selectIsMultipleOn","selectCurrentSectionForPrint","strings","FretBoard","useSelector","dispatch","useDispatch","style","userSelect","getFreatBoardTable","string","fret","newBuffer","toString","onClickHandler","fretBoard","rows","j","key","push","onClick","className","includes","width","textAlign","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","addEventListener","eventListener","event","removeEventListener","KeyListener","e","find","sectionSeparator","tabStyle","display","flexWrap","bufferStyle","marginLeft","color","fontWeight","Tablature","currentSectionForPrint","join","float","AppInfo","href","target","rel","Page","rootReducer","combineReducers","slice","pop","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAOO,SAASA,EAAcC,GAC5B,IAAMC,EARD,SAA4BD,GACjC,OAAOA,EAAOE,QACZ,SAACC,EAAOC,GAAR,OAAoBC,KAAKC,IAAIH,EAAmB,OAAZC,EAAmB,EAAIA,EAAQH,UACnE,GAKaM,CAAmBP,GAClC,IAAIC,EAAQ,OAAO,KAEnB,IAAIO,EAAa,KAEjB,OADAA,EAAaA,EAAWC,UAAU,EAAGR,GAC9BD,EAAOU,KAAI,SAACC,GACf,OAAS,OAANA,EACQH,EAERG,EAAEV,OAASA,EAAc,IAAN,OAAWU,GAC1BA,KClBN,SAASC,EAAaC,GAC3B,IAAMC,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAItC,OAHAD,EAAQE,SAAQ,SAACC,GACfA,EAAMD,SAAQ,SAACE,EAAMC,GAAP,OAAcJ,EAAII,IAAJ,UAAaD,EAAb,WAEvBH,ECFT,IAAMK,EAAkB,iBAAO,CAC7BC,SAAU,GACVpB,OAAQqB,MAAM,GAAGC,KAAK,MACtBC,QAAS,KACTC,cAAc,EACdC,eAAgB,KAEZC,EAAa,kBACbC,EAAe,oBACfC,EAAqB,0BACrBC,EAAO,YACPC,EAAW,gBACXC,EAAmB,wBA8ClB,SAASC,EAAUC,GACxB,MAAO,CAAEC,KAAMR,EAAYO,WAOtB,SAASE,EAAgBF,GAC9B,MAAO,CAAEC,KAAMN,EAAoBK,WAG9B,SAASG,EAAQH,GACtB,MAAO,CAAEC,KAAMJ,EAAUG,WAGpB,SAASI,IACd,MAAO,CAAEH,KAAML,GAOV,IAAMS,EAAiB,SAACC,GAAD,OAAWA,EAAMC,KAAKpB,UAEvCqB,EAAe,SAACF,GAAD,OAAWA,EAAMC,KAAKxC,QAErC0C,EAAqB,SAACH,GAAD,OAAWA,EAAMC,KAAKhB,cAE3CmB,EAA+B,SAACJ,GAC3C,OAAO3B,EAAa2B,EAAMC,KAAKf,iBC5FpBmB,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,K,OCSlC,SAASC,IACtB,IAAM7C,EAAS8C,YAAYL,GACrBM,EAAWC,cACXxB,EAAesB,YAAYJ,GAajC,OACE,uBAAOO,MAAO,CAAEC,WAAY,QAA5B,SACE,gCAAQC,GAbZ,SAAiBC,EAAQC,GACvB,IAAMC,EAAY9B,EAAY,YAAOxB,GAAUqB,MAAM,GAAGC,KAAK,MAC7DgC,EAAUF,GAAUC,EAAKE,WAGvBR,EADEvB,EACOQ,EAAUsB,GAEVlB,EAAQkB,WAWvB,SAASH,EAAmBK,GAE1B,IADA,IAAMC,EAAY,GADwB,WAEjCvC,GAEP,IADA,IAAMwC,EAAO,GAH2B,WAI/BC,GACP,IAAMC,EAAMhB,EAAQ1B,GAAKyC,EACzBD,EAAKG,KACH,oBAEEC,QAAS,kBAAMN,EAAetC,EAAGyC,IACjCI,UACE,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIC,SAASL,GAAK,YAAc,GAJjE,SAOGC,GANIA,KAJFD,EAAI,EAAGA,GAAK,GAAIA,IAAM,EAAtBA,GAeTF,EAAUI,KACR,+BACGH,EACD,oBACET,MAAO,CAAEgB,MAAO,OAAQC,UAAW,UACnCJ,QAAS,kBAAMN,EAAetC,EAAG,MAFnC,iBAFOA,KAlBJA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GA6BT,OAAOuC,EC5DF,SAASU,EAAiBC,EAAWC,GAA2B,IAAlBC,EAAiB,uDAAPC,OAErDC,EAAeC,mBAMrBC,qBAAU,WACRF,EAAapE,QAAUiE,IACtB,CAACA,IAEJK,qBACE,WAIE,GADoBJ,GAAWA,EAAQK,iBACvC,CAGA,IAAMC,EAAgB,SAAAC,GAAK,OAAIL,EAAapE,QAAQyE,IAMpD,OAHAP,EAAQK,iBAAiBP,EAAWQ,GAG7B,WACLN,EAAQQ,oBAAoBV,EAAWQ,OAG3C,CAACR,EAAWE,ICtBX,SAASS,IACd,IAAMhC,EAAWC,cACXhD,EAAS8C,YAAYL,GAuB3B,OAjBA0B,EAAiB,WAAW,SAACa,GACb,UAAVA,EAAEpB,KACJb,EAASZ,GAAgB,OAI7BgC,EAAiB,SAAS,SAACa,GACX,cAAVA,EAAEpB,KAVNb,EAASV,KAWK,UAAV2C,EAAEpB,MACJb,EAASZ,GAAgB,IACrBnC,EAAOiF,MAAK,SAAC7B,GAAD,OAAuB,OAAXA,OAC1BL,EAASX,EAAQpC,IACjB+C,EAASf,EAAUX,MAAM,GAAGC,KAAK,aAKhC,6BC3BT,IAAM4D,EAAgB,mBAChBC,EAAW,CAAEC,QAAS,OAAQC,SAAU,QACxCC,EAAc,CAClBC,WAAY,QACZC,MAAO,SACPC,WAAY,OACZvB,UAAW,QACXD,MAAO,QAGM,SAASyB,IACtB,IAAM1F,EAAS8C,YAAYL,GACrBkD,EAAyB7C,YAAYH,GACrCvB,EAAW0B,YAAYR,GAE7B,OACE,sBAAKW,MAAOkC,EAAZ,UACE,8BAAMvC,EAAQgD,KAAK,QACnB,8BAAMV,IACL9D,EAASV,KAAI,SAACG,GAAD,OACZ,qCACE,8BAAMD,EAAaC,GAAS+E,KAAK,QACjC,8BAAMV,UAGV,8BAAMS,EAAuBC,KAAK,QAClC,qBAAK3C,MAAOqC,EAAZ,SAA0BtF,EAAO4F,KAAK,WCnC5C,IAAM3C,EAAQ,CAAE4C,MAAO,QAAS5B,MAAO,OAAQC,UAAW,SAC3C,SAAS4B,IACtB,OACE,sBAAK7C,MAAOA,EAAZ,0CACgC,IAC9B,mBACE8C,KAAK,wDACLC,OAAO,SAASC,IAAI,aAFtB,yBAFF,qBAQqB,IACnB,mBAAGF,KAAK,sCAAsCC,OAAO,SAASC,IAAI,aAAlE,uBCNS,SAASC,IACtB,IAAMnD,EAAWC,cAUjB,OACE,qCACE,cAAC+B,EAAD,IACA,cAACe,EAAD,IACA,qEACA,qFACA,8EACA,cAACjD,EAAD,IACA,wBAAQiB,QAhBZ,WACEf,EAASV,MAeP,uBACA,wBAAQyB,QAbZ,WACEf,EPoEK,CAAEb,KAAMH,KOxDX,8BACA,cAAC2D,EAAD,O,WCvBAS,EAAcC,YAAgB,CAClC5D,KRYa,WAA6D,IAA/CD,EAA8C,uDAAtCpB,IAAsC,yCAAjBe,EAAiB,EAAjBA,KAAMD,EAAW,EAAXA,QAC9D,OAAQC,GACN,KAAKR,EACH,OAAO,2BAAKa,GAAZ,IAAmBvC,OAAQiC,IAC7B,KAAKN,EACH,OAAO,2BAAKY,GAAZ,IAAmBhB,QAASU,IAC9B,KAAKL,EACH,OAAO,2BAAKW,GAAZ,IAAmBf,aAAcS,IACnC,KAAKJ,EACH,IAAIT,EAAQ,YAAOmB,EAAMnB,UACzB,IAAKmB,EAAMd,eAAexB,SAAWmB,EAASnB,OAC5C,OAAOsC,EAET,GAAIA,EAAMd,eAAexB,OACvB,OAAO,2BACFsC,GADL,IAEEd,eAAgBc,EAAMd,eAAe4E,MAAM,GAAI,KAGjD,IAAI5E,EAAiBL,EAASkF,MAC9B,OAAO,2BACF/D,GADL,IAEEnB,WACAK,mBAIN,KAAKK,EACH,OAAO,2BACFS,GADL,IAEEd,eAAe,GAAD,mBAAMc,EAAMd,gBAAZ,CAA4B1B,EAAckC,OAE5D,KAAKF,EACH,OAAKQ,EAAMd,eAAexB,OACnB,2BACFsC,GADL,IAEEnB,SAAS,GAAD,mBAAMmB,EAAMnB,UAAZ,CAAsBmB,EAAMd,iBACpCA,eAAgB,KAJuBc,EAM3C,QACE,OAAOA,MQjDE4D,ICFAI,EAFDC,YAAYL,GCAX,SAASM,IACtB,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,cAACL,EAAD,MCPN,IAYeQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.682126fb.chunk.js","sourcesContent":["export function countMaxFretLength(buffer) {\r\n  return buffer.reduce(\r\n    (accum, current) => Math.max(accum, current === null ? 0 : current.length),\r\n    0\r\n  );\r\n}\r\n\r\nexport function bufferToChord(buffer) {\r\n  const length = countMaxFretLength(buffer);\r\n  if(!length) return null;\r\n\r\n  let emptySpace = \"--\";\r\n  emptySpace = emptySpace.substring(0, length);\r\n  return buffer.map((b) => {\r\n      if(b === null) {\r\n          return emptySpace\r\n      }\r\n      if(b.length < length) return `-${b}`;\r\n      return b;\r\n  });\r\n}\r\n","export function sectionToTab(section) {\r\n  const tab = [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"];\r\n  section.forEach((chord) => {\r\n    chord.forEach((note, i) => (tab[i] += `${note}-`));\r\n  });\r\n  return tab;\r\n}\r\n","import { bufferToChord } from \"../utils/bufferToChord\";\r\nimport { sectionToTab } from \"../utils/sectionToTab\";\r\n\r\nconst getDefaultState = () => ({\r\n  sections: [],\r\n  buffer: Array(6).fill(null),\r\n  keyHold: null,\r\n  isMultipleOn: false,\r\n  currentSection: [],\r\n});\r\nconst SET_BUFFER = \"data SET_BUFFER\";\r\nconst SET_KEY_HOLD = \"data SET_KEY_HOLD\";\r\nconst SET_IS_MULTIPLE_ON = \"data SET_IS_MULTIPLE_ON\";\r\nconst UNDO = \"data UNDO\";\r\nconst ADD_LINE = \"data ADD_LINE\";\r\nconst COMPLETE_SECTION = \"data COMPLETE_SECTION\";\r\n\r\nexport default function data(state = getDefaultState(), { type, payload }) {\r\n  switch (type) {\r\n    case SET_BUFFER:\r\n      return { ...state, buffer: payload };\r\n    case SET_KEY_HOLD:\r\n      return { ...state, keyHold: payload };\r\n    case SET_IS_MULTIPLE_ON:\r\n      return { ...state, isMultipleOn: payload };\r\n    case UNDO:\r\n      let sections = [...state.sections];\r\n      if (!state.currentSection.length && !sections.length) {\r\n        return state;\r\n      }\r\n      if (state.currentSection.length) {\r\n        return {\r\n          ...state,\r\n          currentSection: state.currentSection.slice(0, -1),\r\n        };\r\n      } else {\r\n        let currentSection = sections.pop();\r\n        return {\r\n          ...state,\r\n          sections,\r\n          currentSection,\r\n        };\r\n      }\r\n\r\n    case ADD_LINE:\r\n      return {\r\n        ...state,\r\n        currentSection: [...state.currentSection, bufferToChord(payload)],\r\n      };\r\n    case COMPLETE_SECTION:\r\n      if (!state.currentSection.length) return state;\r\n      return {\r\n        ...state,\r\n        sections: [...state.sections, state.currentSection],\r\n        currentSection: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function setBuffer(payload) {\r\n  return { type: SET_BUFFER, payload };\r\n}\r\n\r\nexport function setKeyHold(payload) {\r\n  return { type: SET_KEY_HOLD, payload };\r\n}\r\n\r\nexport function setIsMultipleOn(payload) {\r\n  return { type: SET_IS_MULTIPLE_ON, payload };\r\n}\r\n\r\nexport function addLine(payload) {\r\n  return { type: ADD_LINE, payload };\r\n}\r\n\r\nexport function undo() {\r\n  return { type: UNDO };\r\n}\r\n\r\nexport function completeSection() {\r\n  return { type: COMPLETE_SECTION };\r\n}\r\n\r\nexport const selectSections = (state) => state.data.sections;\r\nexport const selectPreRows = (state) => state.data.preRows;\r\nexport const selectBuffer = (state) => state.data.buffer;\r\nexport const selectKeyHold = (state) => state.data.keyHold;\r\nexport const selectIsMultipleOn = (state) => state.data.isMultipleOn;\r\n\r\nexport const selectCurrentSectionForPrint = (state) => {\r\n  return sectionToTab(state.data.currentSection);\r\n};\r\n","export const strings = [\"e\", \"B\", \"G\", \"D\", \"A\", \"E\"];\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addLine,\r\n  selectBuffer,\r\n  selectIsMultipleOn,\r\n  setBuffer,\r\n} from \"../ducks/data\";\r\nimport { strings } from \"../utils/strings\";\r\n\r\nexport default function FretBoard() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const dispatch = useDispatch();\r\n  const isMultipleOn = useSelector(selectIsMultipleOn);\r\n\r\n  function onClick(string, fret) {\r\n    const newBuffer = isMultipleOn ? [...buffer] : Array(6).fill(null);\r\n    newBuffer[string] = fret.toString();\r\n\r\n    if (isMultipleOn) {\r\n      dispatch(setBuffer(newBuffer));\r\n    } else {\r\n      dispatch(addLine(newBuffer));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <table style={{ userSelect: \"none\" }}>\r\n      <tbody>{getFreatBoardTable(onClick)}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction getFreatBoardTable(onClickHandler) {\r\n  const fretBoard = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    const rows = [];\r\n    for (let j = 0; j <= 24; j++) {\r\n      const key = strings[i] + j;\r\n      rows.push(\r\n        <td\r\n          key={key}\r\n          onClick={() => onClickHandler(i, j)}\r\n          className={\r\n            [3, 5, 7, 9, 12, 15, 17, 19, 21].includes(j) ? \"gray-cell\" : \"\"\r\n          }\r\n        >\r\n          {key}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    fretBoard.push(\r\n      <tr key={i}>\r\n        {rows}\r\n        <td\r\n          style={{ width: \"20px\", textAlign: \"center\" }}\r\n          onClick={() => onClickHandler(i, \"x\")}\r\n        >\r\n          x\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n  return fretBoard;\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Hook\r\nexport function useEventListener(eventName, handler, element = window){\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef();\r\n  \r\n    // Update ref.current value if handler changes.\r\n    // This allows our effect below to always get latest handler ...\r\n    // ... without us needing to pass it in effect deps array ...\r\n    // ... and potentially cause effect to re-run every render.\r\n    useEffect(() => {\r\n      savedHandler.current = handler;\r\n    }, [handler]);\r\n  \r\n    useEffect(\r\n      () => {\r\n        // Make sure element supports addEventListener\r\n        // On \r\n        const isSupported = element && element.addEventListener;\r\n        if (!isSupported) return;\r\n  \r\n        // Create event listener that calls handler function stored in ref\r\n        const eventListener = event => savedHandler.current(event);\r\n  \r\n        // Add event listener\r\n        element.addEventListener(eventName, eventListener);\r\n  \r\n        // Remove event listener on cleanup\r\n        return () => {\r\n          element.removeEventListener(eventName, eventListener);\r\n        };\r\n      },\r\n      [eventName, element] // Re-run if eventName or element changes\r\n    );\r\n  };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    addLine,\r\n  selectBuffer,\r\n  setBuffer,\r\n  setIsMultipleOn,\r\n  undo,\r\n} from \"../ducks/data\";\r\n\r\nimport { useEventListener } from \"../utils/useEventListener\";\r\n\r\nexport function KeyListener() {\r\n  const dispatch = useDispatch();\r\n  const buffer = useSelector(selectBuffer);\r\n\r\n  function onBackspace() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  useEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(true));\r\n    }\r\n  });\r\n\r\n  useEventListener(\"keyup\", (e) => {\r\n    if (e.key === \"Backspace\") onBackspace();\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(false));\r\n      if (buffer.find((string) => string !== null)) {\r\n        dispatch(addLine(buffer));\r\n        dispatch(setBuffer(Array(6).fill(null)));\r\n      }\r\n    }\r\n  });\r\n\r\n  return <></>;\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  selectBuffer,\r\n  selectCurrentSectionForPrint,\r\n  selectSections,\r\n} from \"../ducks/data\";\r\nimport { sectionToTab } from \"../utils/sectionToTab\";\r\nimport { strings } from \"../utils/strings\";\r\n\r\nconst sectionSeparator = `|\\n|\\n|\\n|\\n|\\n|`;\r\nconst tabStyle = { display: \"flex\", flexWrap: \"wrap\" };\r\nconst bufferStyle = {\r\n  marginLeft: \"0.2em\",\r\n  color: \"orange\",\r\n  fontWeight: \"bold\",\r\n  textAlign: \"right\" ,\r\n  width: \"15px\"\r\n};\r\n\r\nexport default function Tablature() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const currentSectionForPrint = useSelector(selectCurrentSectionForPrint);\r\n  const sections = useSelector(selectSections);\r\n\r\n  return (\r\n    <div style={tabStyle}>\r\n      <pre>{strings.join(\"\\n\")}</pre>\r\n      <pre>{sectionSeparator}</pre>\r\n      {sections.map((section) => (\r\n        <>\r\n          <pre>{sectionToTab(section).join(\"\\n\")}</pre>\r\n          <pre>{sectionSeparator}</pre>\r\n        </>\r\n      ))}\r\n      <pre>{currentSectionForPrint.join(\"\\n\")}</pre>\r\n      <pre style={bufferStyle}>{buffer.join(\"\\n\")}</pre>\r\n    </div>\r\n  );\r\n}\r\n","const style = { float: \"right\", width: \"20em\", textAlign: \"right\" };\r\nexport default function AppInfo() {\r\n  return (\r\n    <div style={style}>\r\n      This app is open source under{\" \"}\r\n      <a\r\n        href=\"https://github.com/gorankami/tabber/blob/main/LICENSE\"\r\n        target=\"_blank\" rel=\"noreferrer\"\r\n      >\r\n        MIT license\r\n      </a>\r\n      , and is hosted at{\" \"}\r\n      <a href=\"https://github.com/gorankami/tabber\" target=\"_blank\" rel=\"noreferrer\">\r\n        GitHub\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport FretBoard from \"./FretBoard\";\r\nimport { KeyListener } from \"./KeyListener\";\r\nimport Tablature from \"./Tablature\";\r\nimport { completeSection, undo } from \"../ducks/data\";\r\nimport AppInfo from \"./AppInfo\";\r\nexport default function Page() {\r\n  const dispatch = useDispatch();\r\n\r\n  function onUndo() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  function onCompleteSection(){\r\n    dispatch(completeSection())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <KeyListener />\r\n      <AppInfo />\r\n      <p>Click on a fret to add it to the tab</p>\r\n      <p>Hold SHIFT and click multiple strings to add a chord</p>\r\n      <p>Press BACKSPACE to remove last vertical array</p>\r\n      <FretBoard />\r\n      <button onClick={onUndo}>Backspace</button>\r\n      <button onClick={onCompleteSection}>Complete section</button>\r\n      <Tablature />\r\n    </>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\n\r\nconst rootReducer = combineReducers({\r\n  data,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import Page from \"./components/Page\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./ducks/store\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Page />\r\n    </Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}