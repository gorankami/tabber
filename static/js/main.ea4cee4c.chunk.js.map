{"version":3,"sources":["components/Tablature.module.css","components/FretBoard.module.css","components/InfoPanel.module.css","utils/bufferToChord.js","utils/sectionToTab.js","ducks/data.js","utils/stringsAndNotes.js","utils/getNoteByStringAndFret.js","components/FretBoard.js","utils/useEventListener.js","components/KeyListener.js","components/Tablature.js","utils/a.js","components/InfoPanel.js","components/Page.js","ducks/rootReducer.js","ducks/store.js","App.js","reportWebVitals.js","index.js","components/Page.module.css"],"names":["module","exports","bufferToChord","buffer","length","reduce","accum","current","Math","max","countMaxFretLength","emptySpace","substring","map","b","sectionToTab","section","tab","forEach","chord","note","i","SET_BUFFER","SET_KEY_HOLD","SET_IS_MULTIPLE_ON","UNDO","ADD_LINE","COMPLETE_SECTION","SET_TITLE","SET_ARE_NOTE_LABELS_SHOWN","getDefaultState","sections","Array","fill","keyHold","isMultipleOn","currentSection","title","areNoteLabelsShown","setBuffer","payload","type","setIsMultipleOn","addLine","undo","selectSections","state","data","selectBuffer","selectIsMultipleOn","selectCurrentSectionForPrint","selectTitle","selectAreNoteLabelsShown","strings","notes","getNoteByStringAndFret","string","fret","getOffset","FretBoard","useSelector","dispatch","useDispatch","className","classNames","from","keys","n","getFreatBoardTable","newBuffer","toString","onClickHandler","fretBoard","frets","width","j","push","onClick","style","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","addEventListener","eventListener","event","removeEventListener","KeyListener","e","key","find","sectionSeparator","Tablature","currentSectionForPrint","join","bufferStyle","a","url","text","href","target","rel","InfoPanel","value","onChange","checked","print","Page","noPrint","untitled","rootReducer","combineReducers","slice","pop","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea4cee4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tablature\":\"Tablature_Tablature__ZSR7P\",\"bufferStyle\":\"Tablature_bufferStyle__1wU1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FretBoard\":\"FretBoard_FretBoard__3ffBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoPanel\":\"InfoPanel_InfoPanel__3VAV2\"};","export function countMaxFretLength(buffer) {\r\n  return buffer.reduce(\r\n    (accum, current) => Math.max(accum, current === null ? 0 : current.length),\r\n    0\r\n  );\r\n}\r\n\r\nexport function bufferToChord(buffer) {\r\n  const length = countMaxFretLength(buffer);\r\n  if(!length) return null;\r\n\r\n  let emptySpace = \"--\";\r\n  emptySpace = emptySpace.substring(0, length);\r\n  return buffer.map((b) => {\r\n      if(b === null) {\r\n          return emptySpace\r\n      }\r\n      if(b.length < length) return `-${b}`;\r\n      return b;\r\n  });\r\n}\r\n","export function sectionToTab(section) {\r\n  const tab = [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"];\r\n  section.forEach((chord) => {\r\n    chord.forEach((note, i) => (tab[i] += `${note}-`));\r\n  });\r\n  return tab;\r\n}\r\n","import { bufferToChord } from \"../utils/bufferToChord\";\r\nimport { sectionToTab } from \"../utils/sectionToTab\";\r\n\r\nconst SET_BUFFER = \"data SET_BUFFER\";\r\nconst SET_KEY_HOLD = \"data SET_KEY_HOLD\";\r\nconst SET_IS_MULTIPLE_ON = \"data SET_IS_MULTIPLE_ON\";\r\nconst UNDO = \"data UNDO\";\r\nconst ADD_LINE = \"data ADD_LINE\";\r\nconst COMPLETE_SECTION = \"data COMPLETE_SECTION\";\r\nconst SET_TITLE = \"data SET_TITLE\";\r\nconst SET_ARE_NOTE_LABELS_SHOWN = \"data SET_ARE_NOTE_LABELS_SHOWN\";\r\n\r\nconst getDefaultState = () => ({\r\n  sections: [],\r\n  buffer: Array(6).fill(null),\r\n  keyHold: null,\r\n  isMultipleOn: false,\r\n  currentSection: [],\r\n  title: \"\",\r\n  areNoteLabelsShown: false,\r\n});\r\n\r\nexport default function data(state = getDefaultState(), { type, payload }) {\r\n  switch (type) {\r\n    case SET_BUFFER:\r\n      return { ...state, buffer: payload };\r\n    case SET_KEY_HOLD:\r\n      return { ...state, keyHold: payload };\r\n    case SET_IS_MULTIPLE_ON:\r\n      return { ...state, isMultipleOn: payload };\r\n    case UNDO:\r\n      let sections = [...state.sections];\r\n      if (!state.currentSection.length && !sections.length) {\r\n        return state;\r\n      }\r\n      if (state.currentSection.length) {\r\n        return {\r\n          ...state,\r\n          currentSection: state.currentSection.slice(0, -1),\r\n        };\r\n      } else {\r\n        let currentSection = sections.pop();\r\n        return {\r\n          ...state,\r\n          sections,\r\n          currentSection,\r\n        };\r\n      }\r\n\r\n    case ADD_LINE:\r\n      return {\r\n        ...state,\r\n        currentSection: [...state.currentSection, bufferToChord(payload)],\r\n      };\r\n    case COMPLETE_SECTION:\r\n      if (!state.currentSection.length) return state;\r\n      return {\r\n        ...state,\r\n        sections: [...state.sections, state.currentSection],\r\n        currentSection: [],\r\n      };\r\n    case SET_TITLE:\r\n      return { ...state, title: payload };\r\n    case SET_ARE_NOTE_LABELS_SHOWN:\r\n      return { ...state, areNoteLabelsShown: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// ACTIONS\r\n\r\nexport const setBuffer = (payload) => ({ type: SET_BUFFER, payload });\r\nexport const setKeyHold = (payload) => ({ type: SET_KEY_HOLD, payload });\r\nexport const setIsMultipleOn = (payload) => ({\r\n  type: SET_IS_MULTIPLE_ON,\r\n  payload,\r\n});\r\nexport const addLine = (payload) => ({ type: ADD_LINE, payload });\r\nexport const undo = () => ({ type: UNDO });\r\nexport const completeSection = () => ({ type: COMPLETE_SECTION });\r\nexport const setTitle = (payload) => ({ type: SET_TITLE, payload });\r\nexport const setAreNoteLabelsShown = (payload) => ({\r\n  type: SET_ARE_NOTE_LABELS_SHOWN,\r\n  payload,\r\n});\r\n// SELECTORS\r\n\r\nexport const selectSections = (state) => state.data.sections;\r\nexport const selectPreRows = (state) => state.data.preRows;\r\nexport const selectBuffer = (state) => state.data.buffer;\r\nexport const selectKeyHold = (state) => state.data.keyHold;\r\nexport const selectIsMultipleOn = (state) => state.data.isMultipleOn;\r\nexport const selectCurrentSectionForPrint = (state) =>\r\n  sectionToTab(state.data.currentSection);\r\nexport const selectTitle = (state) => state.data.title;\r\nexport const selectAreNoteLabelsShown = (state) =>\r\n  state.data.areNoteLabelsShown;\r\n","export const strings = [\"e\", \"B\", \"G\", \"D\", \"A\", \"E\"];\r\nexport const notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];","import { notes, strings } from \"./stringsAndNotes\";\r\n\r\nexport function getNoteByStringAndFret(string, fret) {\r\n  return notes[(fret + getOffset(string))  % 12];\r\n}\r\n\r\nfunction getOffset(string){\r\n    switch (string) {\r\n        case strings[0]: //e\r\n        case strings[5]: //E\r\n            return 7;\r\n        case strings[1]: //B\r\n            return 2;\r\n        case strings[2]: //G\r\n            return 10;\r\n        case strings[3]: //D\r\n            return 5;\r\n        case strings[4]: //A\r\n            return 0;\r\n        default:\r\n          return \"\";\r\n      }\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addLine,\r\n  selectAreNoteLabelsShown,\r\n  selectBuffer,\r\n  selectIsMultipleOn,\r\n  setBuffer,\r\n} from \"../ducks/data\";\r\nimport { getNoteByStringAndFret } from \"../utils/getNoteByStringAndFret\";\r\nimport { strings } from \"../utils/stringsAndNotes\";\r\nimport classNames from \"./FretBoard.module.css\";\r\n\r\nexport default function FretBoard() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const dispatch = useDispatch();\r\n  const isMultipleOn = useSelector(selectIsMultipleOn);\r\n  const areNoteLabelsShown = useSelector(selectAreNoteLabelsShown);\r\n\r\n  function onClick(string, fret) {\r\n    const newBuffer = isMultipleOn ? [...buffer] : Array(6).fill(null);\r\n    newBuffer[string] = fret.toString();\r\n\r\n    if (isMultipleOn) {\r\n      dispatch(setBuffer(newBuffer));\r\n    } else {\r\n      dispatch(addLine(newBuffer));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <table className={classNames.FretBoard}>\r\n      <thead>\r\n        {areNoteLabelsShown && (\r\n          <tr>\r\n            {Array.from(Array(25).keys()).map((n) => (\r\n              <th>{n}</th>\r\n            ))}\r\n            <th>Special</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n      <tbody>{getFreatBoardTable(onClick, areNoteLabelsShown)}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction getFreatBoardTable(onClickHandler, areNoteLabelsShown) {\r\n  const fretBoard = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    const frets = [];\r\n    let width = 4;\r\n\r\n    for (let j = 0; j <= 24; j++) {\r\n      width *= 0.96;\r\n      frets.push(\r\n        <td\r\n          key={strings[i] + j}\r\n          onClick={() => onClickHandler(i, j)}\r\n          style={{ width: j ? width + \"em\" : \"1em\" }}\r\n        >\r\n          {areNoteLabelsShown && getNoteByStringAndFret(strings[i], j)}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    fretBoard.push(\r\n      <tr key={i}>\r\n        {frets}\r\n        <td onClick={() => onClickHandler(i, \"x\")}>x</td>\r\n      </tr>\r\n    );\r\n  }\r\n  return fretBoard;\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Hook\r\nexport function useEventListener(eventName, handler, element = window){\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef();\r\n  \r\n    // Update ref.current value if handler changes.\r\n    // This allows our effect below to always get latest handler ...\r\n    // ... without us needing to pass it in effect deps array ...\r\n    // ... and potentially cause effect to re-run every render.\r\n    useEffect(() => {\r\n      savedHandler.current = handler;\r\n    }, [handler]);\r\n  \r\n    useEffect(\r\n      () => {\r\n        // Make sure element supports addEventListener\r\n        // On \r\n        const isSupported = element && element.addEventListener;\r\n        if (!isSupported) return;\r\n  \r\n        // Create event listener that calls handler function stored in ref\r\n        const eventListener = event => savedHandler.current(event);\r\n  \r\n        // Add event listener\r\n        element.addEventListener(eventName, eventListener);\r\n  \r\n        // Remove event listener on cleanup\r\n        return () => {\r\n          element.removeEventListener(eventName, eventListener);\r\n        };\r\n      },\r\n      [eventName, element] // Re-run if eventName or element changes\r\n    );\r\n  };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    addLine,\r\n  selectBuffer,\r\n  setBuffer,\r\n  setIsMultipleOn,\r\n  undo,\r\n} from \"../ducks/data\";\r\n\r\nimport { useEventListener } from \"../utils/useEventListener\";\r\n\r\nexport function KeyListener() {\r\n  const dispatch = useDispatch();\r\n  const buffer = useSelector(selectBuffer);\r\n\r\n  function onBackspace() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  useEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(true));\r\n    }\r\n  });\r\n\r\n  useEventListener(\"keyup\", (e) => {\r\n    if (e.key === \"Backspace\") onBackspace();\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(false));\r\n      if (buffer.find((string) => string !== null)) {\r\n        dispatch(addLine(buffer));\r\n        dispatch(setBuffer(Array(6).fill(null)));\r\n      }\r\n    }\r\n  });\r\n\r\n  return <></>;\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  selectBuffer,\r\n  selectCurrentSectionForPrint,\r\n  selectSections,\r\n} from \"../ducks/data\";\r\nimport { sectionToTab } from \"../utils/sectionToTab\";\r\nimport { strings } from \"../utils/stringsAndNotes\";\r\nimport classNames from \"./Tablature.module.css\"\r\n\r\nconst sectionSeparator = `|\\n|\\n|\\n|\\n|\\n|`;\r\n\r\nexport default function Tablature() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const currentSectionForPrint = useSelector(selectCurrentSectionForPrint);\r\n  const sections = useSelector(selectSections);\r\n\r\n  return (\r\n    <div className={classNames.Tablature}>\r\n      <pre>{strings.join(\"\\n\")}</pre>\r\n      <pre>{sectionSeparator}</pre>\r\n      {sections.map((section) => (\r\n        <>\r\n          <pre>{sectionToTab(section).join(\"\\n\")}</pre>\r\n          <pre>{sectionSeparator}</pre>\r\n        </>\r\n      ))}\r\n      <pre>{currentSectionForPrint.join(\"\\n\")}</pre>\r\n      <pre className={classNames.bufferStyle}>{buffer.join(\"\\n\")}</pre>\r\n    </div>\r\n  );\r\n}\r\n","export function a(url, text) {\r\n  return (\r\n    <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n      {text}\r\n    </a>\r\n  );\r\n}\r\n","import classNames from \"./InfoPanel.module.css\";\r\nimport { a } from \"../utils/a\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  completeSection,\r\n  selectAreNoteLabelsShown,\r\n  selectTitle,\r\n  setAreNoteLabelsShown,\r\n  setTitle,\r\n  undo,\r\n} from \"../ducks/data\";\r\n\r\nconst mitLicenceUrl = \"https://github.com/gorankami/tabber/blob/main/LICENSE\";\r\nconst githubUrl = \"https://github.com/gorankami/tabber\";\r\n\r\nexport function InfoPanel() {\r\n  const dispatch = useDispatch();\r\n  const title = useSelector(selectTitle);\r\n  const areNoteLabelsShown = useSelector(selectAreNoteLabelsShown);\r\n\r\n  function onTitleChange(e) {\r\n    dispatch(setTitle(e.target.value));\r\n  }\r\n\r\n  function onUndo() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  function onCompleteSection() {\r\n    dispatch(completeSection());\r\n  }\r\n\r\n  function onNoteVisibilityChange(e) {\r\n    dispatch(setAreNoteLabelsShown(e.target.checked));\r\n  }\r\n\r\n  return (\r\n    <div className={classNames.InfoPanel}>\r\n      <label>\r\n        Title: <input value={title} onChange={onTitleChange} />\r\n      </label>\r\n      <p>Click on a fret to add it to the tab</p>\r\n      <p>Hold SHIFT and click multiple strings to add a chord</p>\r\n      <p>Press BACKSPACE to remove last vertical array</p>\r\n      <p>\r\n        This app is open source under {a(mitLicenceUrl, \"MIT license\")}, and is\r\n        hosted at {a(githubUrl, \"GitHub\")}\r\n      </p>\r\n\r\n      <p>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={areNoteLabelsShown}\r\n            onChange={onNoteVisibilityChange}\r\n          />{\" \"}\r\n          Show note labels\r\n        </label>\r\n      </p>\r\n\r\n      <button onClick={onUndo}>Backspace</button>\r\n      <button onClick={onCompleteSection}>Complete section</button>\r\n      <button onClick={() => window.print()}>Print</button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectTitle } from \"../ducks/data\";\r\nimport FretBoard from \"./FretBoard\";\r\nimport { KeyListener } from \"./KeyListener\";\r\nimport Tablature from \"./Tablature\";\r\nimport { InfoPanel } from \"./InfoPanel\";\r\nimport classNames from \"./Page.module.css\";\r\nexport default function Page() {\r\n  const title = useSelector(selectTitle);\r\n\r\n  return (\r\n    <div className={classNames.Page}>\r\n      <KeyListener />\r\n      <div>\r\n        <div className={classNames.noPrint}>\r\n          <FretBoard />\r\n        </div>\r\n        <div className={classNames.print}>\r\n            <div>{!title && <h3 className={classNames.untitled}>untitled</h3>}</div>\r\n            <div>{title && <h3>{title}</h3>}</div>\r\n            <Tablature />\r\n        </div>\r\n      </div>\r\n      <div className={classNames.noPrint}>\r\n        <InfoPanel />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\n\r\nconst rootReducer = combineReducers({\r\n  data,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import Page from \"./components/Page\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./ducks/store\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Page />\r\n    </Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"Page_Page__RyEhf\",\"untitled\":\"Page_untitled__3fjeD\",\"print\":\"Page_print__3jHFv\",\"noPrint\":\"Page_noPrint__1S4xJ\"};"],"sourceRoot":""}