{"version":3,"sources":["ducks/data.js","utils/strings.js","components/FretBoard.js","utils/useEventListener.js","components/KeyListener.js","components/Sections.js","components/Page.js","ducks/rootReducer.js","ducks/store.js","App.js","reportWebVitals.js","index.js"],"names":["getDefaultState","sections","preRows","Array","fill","buffer","keyHold","isMultipleOn","SET_BUFFER","SET_KEY_HOLD","SET_IS_MULTIPLE_ON","UNDO","ADD_LINE","setBuffer","payload","type","setIsMultipleOn","addLine","undo","selectPreRows","state","data","selectBuffer","selectIsMultipleOn","strings","FretBoard","useSelector","dispatch","useDispatch","table","i","rows","j","key","push","onClick","string","fret","newBuffer","className","includes","style","userSelect","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","KeyListener","e","find","Sections","display","join","map","r","Page","rootReducer","combineReducers","row","substring","length","line","maxFret","reduce","maximum","Math","max","empty","newPreRows","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAMA,EAAkB,iBAAO,CAC7BC,SAAU,GACVC,QAASC,MAAM,GAAGC,KAAK,IACvBC,OAAQF,MAAM,GAAGC,KAAK,MACtBE,QAAS,KACTC,cAAc,IAEVC,EAAa,kBACbC,EAAe,oBACfC,EAAqB,0BACrBC,EAAO,YACPC,EAAW,gBAoCV,SAASC,EAAUC,GACxB,MAAO,CAAEC,KAAMP,EAAYM,WAOtB,SAASE,EAAgBF,GAC9B,MAAO,CAAEC,KAAML,EAAoBI,WAG9B,SAASG,EAAQH,GACtB,MAAO,CAAEC,KAAMH,EAAUE,WAGpB,SAASI,IACd,MAAO,CAAEH,KAAMJ,GAGV,IACMQ,EAAgB,SAACC,GAAD,OAAWA,EAAMC,KAAKnB,SACtCoB,EAAe,SAACF,GAAD,OAAWA,EAAMC,KAAKhB,QAErCkB,EAAqB,SAACH,GAAD,OAAWA,EAAMC,KAAKd,cCvE3CiB,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,K,OCSlC,SAASC,IACtB,IAAMpB,EAASqB,YAAYJ,GACrBK,EAAWC,cACXrB,EAAemB,YAAYH,GAcjC,IADA,IAAMM,EAAQ,GAhBoB,WAiBzBC,GAEP,IADA,IAAMC,EAAO,GAlBmB,WAmBvBC,GACP,IAAMC,EAAMT,EAAQM,GAAKE,EACzBD,EAAKG,KACH,oBAEEC,QAAS,kBAnBjB,SAAiBC,EAAQC,GACvB,IAAMC,EAAY/B,EAAY,YAAOF,GAAUF,MAAM,GAAGC,KAAK,MAC7DkC,EAAUF,GAAUC,EAGlBV,EADEpB,EACOM,EAAUyB,GAEVrB,EAAQqB,IAYEH,CAAQL,EAAGE,IAC1BO,UACE,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIC,SAASR,GAAK,YAAc,GAJjE,SAOGC,GANIA,KAJFD,EAAI,EAAGA,GAAK,GAAIA,IAAM,EAAtBA,GAeTH,EAAMK,KAAK,6BAAaH,GAAJD,KAjBbA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAoBT,OACE,uBAAOW,MAAO,CAAEC,WAAY,QAA5B,SACE,gCAAQb,MC7CP,SAASc,EAAiBC,EAAWC,GAA2B,IAAlBC,EAAiB,uDAAPC,OAErDC,EAAeC,mBAMrBC,qBAAU,WACRF,EAAaG,QAAUN,IACtB,CAACA,IAEJK,qBACE,WAIE,GADoBJ,GAAWA,EAAQM,iBACvC,CAGA,IAAMC,EAAgB,SAAAC,GAAK,OAAIN,EAAaG,QAAQG,IAMpD,OAHAR,EAAQM,iBAAiBR,EAAWS,GAG7B,WACLP,EAAQS,oBAAoBX,EAAWS,OAG3C,CAACT,EAAWE,ICtBX,SAASU,IACd,IAAM7B,EAAWC,cACXvB,EAASqB,YAAYJ,GAuB3B,OAjBAqB,EAAiB,WAAW,SAACc,GACb,UAAVA,EAAExB,KACJN,EAASX,GAAgB,OAI7B2B,EAAiB,SAAS,SAACc,GACX,cAAVA,EAAExB,KAVNN,EAAST,KAWK,UAAVuC,EAAExB,MACJN,EAASX,GAAgB,IACrBX,EAAOqD,MAAK,SAACtB,GAAD,OAAuB,OAAXA,OAC1BT,EAASV,EAAQZ,IACjBsB,EAASd,EAAUV,MAAM,GAAGC,KAAK,aAKhC,6BChCM,SAASuD,IACtB,IAAMzD,EAAUwB,YAAYP,GAC5B,OACE,sBAAKsB,MAAO,CAAEmB,QAAS,QAAvB,UACE,8BAAMpC,EAAQqC,KAAK,QACnB,8BACG3D,EAAQ4D,KAAI,SAACC,EAAGjC,GAAJ,OACX,iCACGiC,EACD,yBAFSjC,WCNN,SAASkC,IACtB,IAAMrC,EAAWC,cAMjB,OACE,qCACE,cAAC4B,EAAD,IACA,qEACA,qFACA,8EACA,cAAC/B,EAAD,IACA,wBAAQU,QAXZ,WACER,EAAST,MAUP,uBACA,cAACyC,EAAD,O,WChBAM,EAAcC,YAAgB,CAClC7C,KPQa,WAA6D,IAA/CD,EAA8C,uDAAtCpB,IAAsC,yCAAjBe,EAAiB,EAAjBA,KAAMD,EAAW,EAAXA,QAC9D,OAAQC,GACN,KAAKP,EACH,OAAO,2BAAKY,GAAZ,IAAmBf,OAAQS,IAC7B,KAAKL,EACH,OAAO,2BAAKW,GAAZ,IAAmBd,QAASQ,IAC9B,KAAKJ,EACH,OAAO,2BAAKU,GAAZ,IAAmBb,aAAcO,IACnC,KAAKH,EACH,OAAO,2BACFS,GADL,IAEElB,QAASkB,EAAMlB,QAAQ4D,KAAI,SAACK,GAAD,OAASA,EAAIC,UAAU,EAAGD,EAAIE,OAAS,QAEtE,KAAKzD,EAOH,IANA,IAAM0D,EAAOxD,EACTyD,EAAUD,EAAKE,QAAO,SAACC,EAASpC,GAClC,OAAOqC,KAAKC,IAAIF,EAASpC,KACxB,MACCuC,EAAQL,EAAU,EAAI,KAAO,IAC3BM,EAAa,GACV/C,EAAI,EAAGA,EAAI,EAAGA,IACrB+C,EAAW3C,KACRd,EAAMlB,QAAQ4B,IAAM,KAAmB,OAAZwC,EAAKxC,GAAcwC,EAAKxC,GAAK8C,IAG7D,OAAO,2BACFxD,GADL,IAEElB,QAAS2E,IAEb,QACE,OAAOzD,MOnCE6C,ICFAa,EAFDC,YAAYd,GCAX,SAASe,IACtB,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,cAACd,EAAD,MCPN,IAYeiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fced31f.chunk.js","sourcesContent":["const getDefaultState = () => ({\r\n  sections: [],\r\n  preRows: Array(6).fill(\"\"),\r\n  buffer: Array(6).fill(null),\r\n  keyHold: null,\r\n  isMultipleOn: false,\r\n});\r\nconst SET_BUFFER = \"data SET_BUFFER\";\r\nconst SET_KEY_HOLD = \"data SET_KEY_HOLD\";\r\nconst SET_IS_MULTIPLE_ON = \"data SET_IS_MULTIPLE_ON\";\r\nconst UNDO = \"data UNDO\";\r\nconst ADD_LINE = \"data ADD_LINE\";\r\n\r\nexport default function data(state = getDefaultState(), { type, payload }) {\r\n  switch (type) {\r\n    case SET_BUFFER:\r\n      return { ...state, buffer: payload };\r\n    case SET_KEY_HOLD:\r\n      return { ...state, keyHold: payload };\r\n    case SET_IS_MULTIPLE_ON:\r\n      return { ...state, isMultipleOn: payload };\r\n    case UNDO:\r\n      return {\r\n        ...state,\r\n        preRows: state.preRows.map((row) => row.substring(0, row.length - 1)),\r\n      };\r\n    case ADD_LINE:\r\n      const line = payload;\r\n      let maxFret = line.reduce((maximum, fret) => {\r\n        return Math.max(maximum, fret);\r\n      }, null);\r\n      let empty = maxFret > 9 ? \"--\" : \"-\";\r\n      const newPreRows = [];\r\n      for (let i = 0; i < 6; i++) {\r\n        newPreRows.push(\r\n          (state.preRows[i] += \"-\" + (line[i] !== null ? line[i] : empty))\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        preRows: newPreRows,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function setBuffer(payload) {\r\n  return { type: SET_BUFFER, payload };\r\n}\r\n\r\nexport function setKeyHold(payload) {\r\n  return { type: SET_KEY_HOLD, payload };\r\n}\r\n\r\nexport function setIsMultipleOn(payload) {\r\n  return { type: SET_IS_MULTIPLE_ON, payload };\r\n}\r\n\r\nexport function addLine(payload) {\r\n  return { type: ADD_LINE, payload };\r\n}\r\n\r\nexport function undo() {\r\n  return { type: UNDO };\r\n}\r\n\r\nexport const selectSections = (state) => state.data.sections;\r\nexport const selectPreRows = (state) => state.data.preRows;\r\nexport const selectBuffer = (state) => state.data.buffer;\r\nexport const selectKeyHold = (state) => state.data.keyHold;\r\nexport const selectIsMultipleOn = (state) => state.data.isMultipleOn;\r\n","export const strings = [\"e\", \"B\", \"G\", \"D\", \"A\", \"E\"];\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addLine,\r\n  selectBuffer,\r\n  selectIsMultipleOn,\r\n  setBuffer,\r\n} from \"../ducks/data\";\r\nimport { strings } from \"../utils/strings\";\r\n\r\nexport default function FretBoard() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const dispatch = useDispatch();\r\n  const isMultipleOn = useSelector(selectIsMultipleOn);\r\n\r\n  function onClick(string, fret) {\r\n    const newBuffer = isMultipleOn ? [...buffer] : Array(6).fill(null);\r\n    newBuffer[string] = fret;\r\n\r\n    if (isMultipleOn) {\r\n      dispatch(setBuffer(newBuffer));\r\n    } else {\r\n      dispatch(addLine(newBuffer));\r\n    }\r\n  }\r\n\r\n  const table = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    const rows = [];\r\n    for (let j = 0; j <= 24; j++) {\r\n      const key = strings[i] + j;\r\n      rows.push(\r\n        <td\r\n          key={key}\r\n          onClick={() => onClick(i, j)}\r\n          className={\r\n            [3, 5, 7, 9, 12, 15, 17, 19, 21].includes(j) ? \"gray-cell\" : \"\"\r\n          }\r\n        >\r\n          {key}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    table.push(<tr key={i}>{rows}</tr>);\r\n  }\r\n\r\n  return (\r\n    <table style={{ userSelect: \"none\" }}>\r\n      <tbody>{table}</tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Hook\r\nexport function useEventListener(eventName, handler, element = window){\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef();\r\n  \r\n    // Update ref.current value if handler changes.\r\n    // This allows our effect below to always get latest handler ...\r\n    // ... without us needing to pass it in effect deps array ...\r\n    // ... and potentially cause effect to re-run every render.\r\n    useEffect(() => {\r\n      savedHandler.current = handler;\r\n    }, [handler]);\r\n  \r\n    useEffect(\r\n      () => {\r\n        // Make sure element supports addEventListener\r\n        // On \r\n        const isSupported = element && element.addEventListener;\r\n        if (!isSupported) return;\r\n  \r\n        // Create event listener that calls handler function stored in ref\r\n        const eventListener = event => savedHandler.current(event);\r\n  \r\n        // Add event listener\r\n        element.addEventListener(eventName, eventListener);\r\n  \r\n        // Remove event listener on cleanup\r\n        return () => {\r\n          element.removeEventListener(eventName, eventListener);\r\n        };\r\n      },\r\n      [eventName, element] // Re-run if eventName or element changes\r\n    );\r\n  };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    addLine,\r\n  selectBuffer,\r\n  setBuffer,\r\n  setIsMultipleOn,\r\n  undo,\r\n} from \"../ducks/data\";\r\n\r\nimport { useEventListener } from \"../utils/useEventListener\";\r\n\r\nexport function KeyListener() {\r\n  const dispatch = useDispatch();\r\n  const buffer = useSelector(selectBuffer);\r\n\r\n  function onBackspace() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  useEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(true));\r\n    }\r\n  });\r\n\r\n  useEventListener(\"keyup\", (e) => {\r\n    if (e.key === \"Backspace\") onBackspace();\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(false));\r\n      if (buffer.find((string) => string !== null)) {\r\n        dispatch(addLine(buffer));\r\n        dispatch(setBuffer(Array(6).fill(null)));\r\n      }\r\n    }\r\n  });\r\n\r\n  return <></>;\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectPreRows } from \"../ducks/data\";\r\nimport { strings } from \"../utils/strings\";\r\n\r\nexport default function Sections() {\r\n  const preRows = useSelector(selectPreRows);\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <pre>{strings.join(\"\\n\")}</pre>\r\n      <pre>\r\n        {preRows.map((r, i) => (\r\n          <span key={i}>\r\n            {r}\r\n            <br />\r\n          </span>\r\n        ))}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport FretBoard from \"./FretBoard\";\r\nimport { KeyListener } from \"./KeyListener\";\r\nimport Sections from \"./Sections\";\r\nimport { undo } from \"../ducks/data\";\r\nexport default function Page() {\r\n  const dispatch = useDispatch();\r\n\r\n  function onUndo() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <KeyListener />\r\n      <p>Click on a fret to add it to the tab</p>\r\n      <p>Hold SHIFT and click multiple strings to add a chord</p>\r\n      <p>Press BACKSPACE to remove last vertical array</p>\r\n      <FretBoard />\r\n      <button onClick={onUndo}>Backspace</button>\r\n      <Sections />\r\n    </>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\n\r\nconst rootReducer = combineReducers({\r\n  data,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import Page from \"./components/Page\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./ducks/store\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Page />\r\n    </Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}