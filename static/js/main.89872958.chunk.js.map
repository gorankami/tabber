{"version":3,"sources":["components/FretBoard.module.css","utils/bufferToChord.js","utils/sectionToTab.js","ducks/data.js","utils/stringsAndNotes.js","utils/getNoteByStringAndFret.js","components/FretBoard.js","utils/useEventListener.js","components/KeyListener.js","components/Tablature.js","utils/a.js","components/AppInfo.js","components/Page.js","ducks/rootReducer.js","ducks/store.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","bufferToChord","buffer","length","reduce","accum","current","Math","max","countMaxFretLength","emptySpace","substring","map","b","sectionToTab","section","tab","forEach","chord","note","i","SET_BUFFER","SET_KEY_HOLD","SET_IS_MULTIPLE_ON","UNDO","ADD_LINE","COMPLETE_SECTION","SET_TITLE","getDefaultState","sections","Array","fill","keyHold","isMultipleOn","currentSection","title","setBuffer","payload","type","setIsMultipleOn","addLine","undo","selectSections","state","data","selectBuffer","selectIsMultipleOn","selectCurrentSectionForPrint","selectTitle","strings","notes","getNoteByStringAndFret","string","fret","getOffset","FretBoard","useSelector","dispatch","useDispatch","className","styles","from","keys","n","getFreatBoardTable","newBuffer","toString","onClickHandler","fretBoard","frets","width","j","push","onClick","style","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","addEventListener","eventListener","event","removeEventListener","KeyListener","e","key","find","sectionSeparator","tabStyle","display","flexWrap","bufferStyle","marginLeft","color","fontWeight","textAlign","Tablature","currentSectionForPrint","join","a","url","text","href","target","rel","float","AppInfo","Page","print","onChange","value","rootReducer","combineReducers","slice","pop","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89872958.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FretBoard\":\"FretBoard_FretBoard__3ffBY\"};","export function countMaxFretLength(buffer) {\r\n  return buffer.reduce(\r\n    (accum, current) => Math.max(accum, current === null ? 0 : current.length),\r\n    0\r\n  );\r\n}\r\n\r\nexport function bufferToChord(buffer) {\r\n  const length = countMaxFretLength(buffer);\r\n  if(!length) return null;\r\n\r\n  let emptySpace = \"--\";\r\n  emptySpace = emptySpace.substring(0, length);\r\n  return buffer.map((b) => {\r\n      if(b === null) {\r\n          return emptySpace\r\n      }\r\n      if(b.length < length) return `-${b}`;\r\n      return b;\r\n  });\r\n}\r\n","export function sectionToTab(section) {\r\n  const tab = [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"];\r\n  section.forEach((chord) => {\r\n    chord.forEach((note, i) => (tab[i] += `${note}-`));\r\n  });\r\n  return tab;\r\n}\r\n","import { bufferToChord } from \"../utils/bufferToChord\";\r\nimport { sectionToTab } from \"../utils/sectionToTab\";\r\n\r\nconst SET_BUFFER = \"data SET_BUFFER\";\r\nconst SET_KEY_HOLD = \"data SET_KEY_HOLD\";\r\nconst SET_IS_MULTIPLE_ON = \"data SET_IS_MULTIPLE_ON\";\r\nconst UNDO = \"data UNDO\";\r\nconst ADD_LINE = \"data ADD_LINE\";\r\nconst COMPLETE_SECTION = \"data COMPLETE_SECTION\";\r\nconst SET_TITLE = \"data SET_TITLE\";\r\n\r\nconst getDefaultState = () => ({\r\n  sections: [],\r\n  buffer: Array(6).fill(null),\r\n  keyHold: null,\r\n  isMultipleOn: false,\r\n  currentSection: [],\r\n  title: \"\",\r\n});\r\n\r\nexport default function data(state = getDefaultState(), { type, payload }) {\r\n  switch (type) {\r\n    case SET_BUFFER:\r\n      return { ...state, buffer: payload };\r\n    case SET_KEY_HOLD:\r\n      return { ...state, keyHold: payload };\r\n    case SET_IS_MULTIPLE_ON:\r\n      return { ...state, isMultipleOn: payload };\r\n    case UNDO:\r\n      let sections = [...state.sections];\r\n      if (!state.currentSection.length && !sections.length) {\r\n        return state;\r\n      }\r\n      if (state.currentSection.length) {\r\n        return {\r\n          ...state,\r\n          currentSection: state.currentSection.slice(0, -1),\r\n        };\r\n      } else {\r\n        let currentSection = sections.pop();\r\n        return {\r\n          ...state,\r\n          sections,\r\n          currentSection,\r\n        };\r\n      }\r\n\r\n    case ADD_LINE:\r\n      return {\r\n        ...state,\r\n        currentSection: [...state.currentSection, bufferToChord(payload)],\r\n      };\r\n    case COMPLETE_SECTION:\r\n      if (!state.currentSection.length) return state;\r\n      return {\r\n        ...state,\r\n        sections: [...state.sections, state.currentSection],\r\n        currentSection: [],\r\n      };\r\n    case SET_TITLE:\r\n      return { ...state, title: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// ACTIONS\r\n\r\nexport const setBuffer = (payload) => ({ type: SET_BUFFER, payload });\r\nexport const setKeyHold = (payload) => ({ type: SET_KEY_HOLD, payload });\r\nexport const setIsMultipleOn = (payload) => ({\r\n  type: SET_IS_MULTIPLE_ON,\r\n  payload,\r\n});\r\nexport const addLine = (payload) => ({ type: ADD_LINE, payload });\r\nexport const undo = () => ({ type: UNDO });\r\nexport const completeSection = () => ({ type: COMPLETE_SECTION });\r\nexport const setTitle = (payload) => ({ type: SET_TITLE, payload });\r\n\r\n// SELECTORS\r\n\r\nexport const selectSections = (state) => state.data.sections;\r\nexport const selectPreRows = (state) => state.data.preRows;\r\nexport const selectBuffer = (state) => state.data.buffer;\r\nexport const selectKeyHold = (state) => state.data.keyHold;\r\nexport const selectIsMultipleOn = (state) => state.data.isMultipleOn;\r\nexport const selectCurrentSectionForPrint = (state) =>\r\n  sectionToTab(state.data.currentSection);\r\nexport const selectTitle = (state) => state.data.title;\r\n","export const strings = [\"e\", \"B\", \"G\", \"D\", \"A\", \"E\"];\r\nexport const notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];","import { notes, strings } from \"./stringsAndNotes\";\r\n\r\nexport function getNoteByStringAndFret(string, fret) {\r\n  return notes[(fret + getOffset(string))  % 12];\r\n}\r\n\r\nfunction getOffset(string){\r\n    switch (string) {\r\n        case strings[0]: //e\r\n        case strings[5]: //E\r\n            return 7;\r\n        case strings[1]: //B\r\n            return 2;\r\n        case strings[2]: //G\r\n            return 10;\r\n        case strings[3]: //D\r\n            return 5;\r\n        case strings[4]: //A\r\n            return 0;\r\n        default:\r\n          return \"\";\r\n      }\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addLine,\r\n  selectBuffer,\r\n  selectIsMultipleOn,\r\n  setBuffer,\r\n} from \"../ducks/data\";\r\nimport { getNoteByStringAndFret } from \"../utils/getNoteByStringAndFret\";\r\nimport { strings } from \"../utils/stringsAndNotes\";\r\nimport styles from \"./FretBoard.module.css\";\r\n\r\nexport default function FretBoard() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const dispatch = useDispatch();\r\n  const isMultipleOn = useSelector(selectIsMultipleOn);\r\n\r\n  function onClick(string, fret) {\r\n    const newBuffer = isMultipleOn ? [...buffer] : Array(6).fill(null);\r\n    newBuffer[string] = fret.toString();\r\n\r\n    if (isMultipleOn) {\r\n      dispatch(setBuffer(newBuffer));\r\n    } else {\r\n      dispatch(addLine(newBuffer));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <table className={styles.FretBoard}>\r\n      <thead>\r\n        <tr>\r\n          {Array.from(Array(25).keys()).map((n) => (\r\n            <th>{n}</th>\r\n          ))}\r\n          <th>Special</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{getFreatBoardTable(onClick)}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction getFreatBoardTable(onClickHandler) {\r\n  const fretBoard = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    const frets = [];\r\n    let width = 3;\r\n\r\n    for (let j = 0; j <= 24; j++) {\r\n      width *= 0.96;\r\n      frets.push(\r\n        <td\r\n          key={strings[i] + j}\r\n          onClick={() => onClickHandler(i, j)}\r\n          style={{ width: j ? width + \"em\" : \"1em\" }}\r\n        >\r\n          {getNoteByStringAndFret(strings[i], j)}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    fretBoard.push(\r\n      <tr key={i}>\r\n        {frets}\r\n        <td onClick={() => onClickHandler(i, \"x\")}>x</td>\r\n      </tr>\r\n    );\r\n  }\r\n  return fretBoard;\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Hook\r\nexport function useEventListener(eventName, handler, element = window){\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef();\r\n  \r\n    // Update ref.current value if handler changes.\r\n    // This allows our effect below to always get latest handler ...\r\n    // ... without us needing to pass it in effect deps array ...\r\n    // ... and potentially cause effect to re-run every render.\r\n    useEffect(() => {\r\n      savedHandler.current = handler;\r\n    }, [handler]);\r\n  \r\n    useEffect(\r\n      () => {\r\n        // Make sure element supports addEventListener\r\n        // On \r\n        const isSupported = element && element.addEventListener;\r\n        if (!isSupported) return;\r\n  \r\n        // Create event listener that calls handler function stored in ref\r\n        const eventListener = event => savedHandler.current(event);\r\n  \r\n        // Add event listener\r\n        element.addEventListener(eventName, eventListener);\r\n  \r\n        // Remove event listener on cleanup\r\n        return () => {\r\n          element.removeEventListener(eventName, eventListener);\r\n        };\r\n      },\r\n      [eventName, element] // Re-run if eventName or element changes\r\n    );\r\n  };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    addLine,\r\n  selectBuffer,\r\n  setBuffer,\r\n  setIsMultipleOn,\r\n  undo,\r\n} from \"../ducks/data\";\r\n\r\nimport { useEventListener } from \"../utils/useEventListener\";\r\n\r\nexport function KeyListener() {\r\n  const dispatch = useDispatch();\r\n  const buffer = useSelector(selectBuffer);\r\n\r\n  function onBackspace() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  useEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(true));\r\n    }\r\n  });\r\n\r\n  useEventListener(\"keyup\", (e) => {\r\n    if (e.key === \"Backspace\") onBackspace();\r\n    if (e.key === \"Shift\") {\r\n      dispatch(setIsMultipleOn(false));\r\n      if (buffer.find((string) => string !== null)) {\r\n        dispatch(addLine(buffer));\r\n        dispatch(setBuffer(Array(6).fill(null)));\r\n      }\r\n    }\r\n  });\r\n\r\n  return <></>;\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  selectBuffer,\r\n  selectCurrentSectionForPrint,\r\n  selectSections,\r\n} from \"../ducks/data\";\r\nimport { sectionToTab } from \"../utils/sectionToTab\";\r\nimport { strings } from \"../utils/stringsAndNotes\";\r\n\r\nconst sectionSeparator = `|\\n|\\n|\\n|\\n|\\n|`;\r\nconst tabStyle = { display: \"flex\", flexWrap: \"wrap\" };\r\nconst bufferStyle = {\r\n  marginLeft: \"0.2em\",\r\n  color: \"orange\",\r\n  fontWeight: \"bold\",\r\n  textAlign: \"right\" ,\r\n  width: \"15px\"\r\n};\r\n\r\nexport default function Tablature() {\r\n  const buffer = useSelector(selectBuffer);\r\n  const currentSectionForPrint = useSelector(selectCurrentSectionForPrint);\r\n  const sections = useSelector(selectSections);\r\n\r\n  return (\r\n    <div style={tabStyle}>\r\n      <pre>{strings.join(\"\\n\")}</pre>\r\n      <pre>{sectionSeparator}</pre>\r\n      {sections.map((section) => (\r\n        <>\r\n          <pre>{sectionToTab(section).join(\"\\n\")}</pre>\r\n          <pre>{sectionSeparator}</pre>\r\n        </>\r\n      ))}\r\n      <pre>{currentSectionForPrint.join(\"\\n\")}</pre>\r\n      <pre style={bufferStyle}>{buffer.join(\"\\n\")}</pre>\r\n    </div>\r\n  );\r\n}\r\n","export function a(url, text) {\r\n  return (\r\n    <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n      {text}\r\n    </a>\r\n  );\r\n}\r\n","import { a } from \"../utils/a\";\r\n\r\nconst style = { float: \"right\", width: \"20em\", textAlign: \"right\" };\r\n\r\nconst mitLicenceUrl = \"https://github.com/gorankami/tabber/blob/main/LICENSE\";\r\nconst githubUrl = \"https://github.com/gorankami/tabber\";\r\n\r\nexport default function AppInfo() {\r\n  return (\r\n    <div style={style}>\r\n      This app is open source under {a(mitLicenceUrl, \"MIT license\")}, and is\r\n      hosted at {a(githubUrl, \"GitHub\")}\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { completeSection, selectTitle, setTitle, undo } from \"../ducks/data\";\r\nimport FretBoard from \"./FretBoard\";\r\nimport { KeyListener } from \"./KeyListener\";\r\nimport Tablature from \"./Tablature\";\r\nimport AppInfo from \"./AppInfo\";\r\n\r\nexport default function Page() {\r\n  const dispatch = useDispatch();\r\n\r\n  const title = useSelector(selectTitle);\r\n\r\n  function onUndo() {\r\n    dispatch(undo());\r\n  }\r\n\r\n  function onCompleteSection() {\r\n    dispatch(completeSection());\r\n  }\r\n\r\n  function onChange(e) {\r\n    dispatch(setTitle(e.target.value));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"no-print\">\r\n        <KeyListener />\r\n        <AppInfo />\r\n        <p>Click on a fret to add it to the tab</p>\r\n        <p>Hold SHIFT and click multiple strings to add a chord</p>\r\n        <p>Press BACKSPACE to remove last vertical array</p>\r\n        \r\n        <FretBoard />\r\n        <button onClick={onUndo}>Backspace</button>\r\n        <button onClick={onCompleteSection}>Complete section</button>\r\n        <button onClick={() => window.print()}>Print</button>\r\n        <br/><br/>\r\n        <label>\r\n          Title: <input onChange={onChange} />\r\n        </label>\r\n        {!title && <h3 style={{color: \"gray\"}}>untitled</h3>}\r\n      </div>\r\n      {title && <h3>{title}</h3>}\r\n      <Tablature />\r\n    </>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\n\r\nconst rootReducer = combineReducers({\r\n  data,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import Page from \"./components/Page\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./ducks/store\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Page />\r\n    </Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}